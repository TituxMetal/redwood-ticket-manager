datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  String    @id @default(uuid())
  email               String    @unique
  name                String?
  resetPasswordToken  String?
  resetTokenExpiresAt DateTime?
  hash                String    @default("")
  salt                String    @default("")

  identity        Identity[]
  createdTickets  Ticket[]   @relation("UserCreatedTickets")
  assignedTickets Ticket[]   @relation("TicketAssignment")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Identity {
  id          String   @id @default(uuid())
  provider    String
  uid         String
  accessToken String
  scope       String?
  lastLoginAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, uid])
  @@index(userId)
}

model Ticket {
  id          String @id @default(uuid())
  title       String
  description String
  status      String @default("OPEN")
  priority    String @default("LOW")

  // Creator of the ticket
  userId           String
  user             User    @relation("UserCreatedTickets", fields: [userId], references: [id], onDelete: Cascade)
  // Assignee of the ticket
  assignedToUserId String?
  assignedToUser   User?   @relation("TicketAssignment", fields: [assignedToUserId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
